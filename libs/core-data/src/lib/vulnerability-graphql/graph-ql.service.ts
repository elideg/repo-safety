import { vulQuery } from './vulnerabilities-graphql';
import { Injectable } from '@angular/core';
import { Apollo } from 'apollo-angular';
import { HttpLink } from 'apollo-angular-link-http';
import { InMemoryCache } from 'apollo-cache-inmemory';
import gql from 'graphql-tag';
import { RepositoriesType } from './vulnerabilities-graphql';
import { map } from 'rxjs/operators'
import { Observable } from 'rxjs';
import { ApolloQueryResult } from 'apollo-client';
import { AuthService } from '@rv/core-data';

@Injectable({
  providedIn: 'root'
})
export class GraphqlService {
  public vulnerabilities: RepositoriesType[];

  constructor(
    private apollo: Apollo,
    private authService: AuthService
  ) { }

  all(): Observable<any> {
    if (!!this.authService.getToken()) {
      return this.apollo.query({
        query: vulQuery,
        fetchPolicy: 'network-only'
      }).pipe(
        map((res: ApolloQueryResult<any>) => res.data.organization.repositories.nodes),
        map(
          (res) => ({
            allrepos: res,
            notfixed: res.filter((r) => r.vulnerabilityAlerts.totalCount > 0)
          })
        )
      );
    }
  }
}
